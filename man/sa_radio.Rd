% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/radio.R
\name{sa_radio}
\alias{sa_radio}
\alias{update_sa_radio}
\title{Radio buttons input}
\usage{
sa_radio(
  inputId,
  label,
  choices = NULL,
  selected = NULL,
  inline = FALSE,
  width = NULL,
  choiceNames = NULL,
  choiceValues = NULL
)

update_sa_radio(
  session,
  inputId,
  label = NULL,
  choices = NULL,
  selected = NULL,
  inline = FALSE
)
}
\arguments{
\item{inputId}{The id of the input object.}

\item{label}{The label to set for the input object.}

\item{choices}{List of values to select from (if elements of the list are
named then that name rather than the value is displayed to the user). If
this argument is provided, then \code{choiceNames} and \code{choiceValues}
must not be provided, and vice-versa. The values should be strings; other
types (such as logicals and numbers) will be coerced to strings.}

\item{selected}{The values that should be initially selected, if any.}

\item{inline}{if \code{TRUE}, \code{ncol} is ignored.}

\item{width}{not in use}

\item{choiceNames, choiceValues}{See \code{shiny::radioButtons}.
Vector of names and values, must have same length.}

\item{session}{The session object passed to function given to shinyServer.}
}
\value{
A list of HTML elements that can be added to a UI definition.#' @export
}
\description{
A Shiny radio buttons input.
}
\examples{
if (interactive()) {
library(shiny)

ui <- function(request) {
fluidPage(
  use_access(),
  fluidRow(bookmarkButton()),
  fluidRow(
    column(3,
      actionButton("btn1", "Reset radio 1 to 'am'"),
      radioButtons(
        "radio1", "Shiny1 - Choose a variable:",
        list("Cylinders" = "cyl", "Transmission" = "am", "Gears" = "gear"),
        width = "1000px"),
      tableOutput("data1")
    ),
    column(3,
      radioButtons(
        "radio2", "Shiny2 (inline) - Choose a variable:",
        list("Cylinders" = "cyl", "Transmission" = "am", "Gears" = "gear"),
        inline = TRUE),
      tableOutput("data2")
    ),
    column(3,
      actionButton("btn3", "Reset radio 3 to 'am'"),
      sa_radio(
        "radio3", "SA1 - Choose a variable:",
        c("Cylinders" = "cyl", "Transmission" = "am", "Gears" = "gear", "A" = "a", "B" = "b"),
        selected = "am"),
      tableOutput("data3")
    ),
    column(3,
    actionButton("btn4", "Reset radio 4 to 'gear'"),
      sa_radio(
        "cb4", "SA2 (inline) - Choose a variable:",
        selected = "cyl",
        choiceNames = c("Cylinders", "Transmission", "Gears"),
        choiceValues = c("cyl", "am", "gear"), inline = TRUE),
      tableOutput("data4")
    )
  )
)
}

server <- function(input, output, session) {
  output$data1 <- renderTable({
    mtcars[, c("mpg", input$radio1), drop = FALSE]
  }, rownames = TRUE)

  output$data2 <- renderTable({
    mtcars[, c("mpg", input$radio2), drop = FALSE]
  }, rownames = TRUE)
  output$data3 <- renderTable({
    mtcars[, c("mpg", input$radio3), drop = FALSE]
  }, rownames = TRUE)

  output$data4 <- renderTable({
    mtcars[, c("mpg", input$radio4), drop = FALSE]
  }, rownames = TRUE)

  observeEvent(input$btn1, {
    updateRadioButtons(session, "radio1", selected = "am")
  })
  observeEvent(input$btn3, {
    update_sa_radio(session, "radio3", selected = "am")
  })
  observeEvent(input$btn4, {
    update_sa_radio(session, "radio4", selected = "gear")
  })
}

shinyApp(ui, server, enableBookmarking = "url")

}
}
